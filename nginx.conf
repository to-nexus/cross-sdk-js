events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/css text/javascript application/javascript application/json;

    server {
        listen 8080;
        server_name *.crosstoken.io;
        
        # 보안 헤더
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Forwarded-For;

        # 다음 설정이 중요!
        real_ip_recursive on;

        # 포트와 프로토콜 정정
        port_in_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # React 앱 서빙
        location /react {
            alias /usr/share/nginx/html/react;
            try_files $uri $uri/ /react/index.html;
            
            # 캐시 설정
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Vanilla 앱 서빙
        location /vanilla {
            alias /usr/share/nginx/html/vanilla;
            try_files $uri $uri/ /vanilla/index.html;
            
            # 캐시 설정
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # CDN 앱 서빙
        location /cdn {
            alias /usr/share/nginx/html/cdn;
            try_files $uri $uri/ /cdn/index.html;
            
            # 캐시 설정
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Cocos Creator 앱 서빙
        location /cocos {
            alias /usr/share/nginx/html/cocos;
            try_files $uri $uri/ /cocos/index.html;
        }
        
        # Cocos Creator 정적 리소스 (절대 경로 처리)
        location ~ ^/(assets|cocos-js|external|src)/ {
            root /usr/share/nginx/html/cocos;
            try_files $uri =404;
            
            # CORS 헤더 추가 (바이너리 로드 문제 해결)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
            add_header Access-Control-Allow-Headers '*' always;
            
            # 바이너리 파일 타입 명시
            types {
                application/octet-stream bin;
                application/wasm wasm;
                application/json json;
            }
        }
        
        # 루트 경로는 랜딩 페이지 서빙
        location = / {
            root /usr/share/nginx/html;
            try_files /index.html =404;
        }
        
        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 404 처리
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
} 
