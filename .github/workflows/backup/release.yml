name: Release Management

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  # Release 브랜치에서 자동 changeset 생성
  auto-changeset:
    name: Auto Generate Changeset
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate changeset from version.json
        run: pnpm run auto-changeset

      - name: Commit changeset
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .changeset/
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "chore: auto-generate changeset from version.json"
            git push
          else
            echo "No changes to commit"
          fi

  # Main 브랜치에서 릴리스 실행
  release:
    name: Release to NPM
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Configure npm for Nexus
        run: |
          echo "//${NEXUS_REGISTRY_URL#https://}:_auth=${{ secrets.NEXUS_CREDENTIALS_BASE64 }}" > .npmrc
          echo "@to-nexus:registry=${{ secrets.NEXUS_REGISTRY_URL }}" >> .npmrc
        env:
          NEXUS_REGISTRY_URL: ${{ secrets.NEXUS_REGISTRY_URL }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Create Release Pull Request or Publish
        uses: changesets/action@v1.4.1
        with:
          version: pnpm run changeset:version
          publish: pnpm run changeset:publish
          title: "Release: Version Packages"
          commit: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NEXUS_CREDENTIALS_BASE64 }}

  # PR에서 빌드 테스트
  test:
    name: Test Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run linting
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test

      - name: Build packages
        run: pnpm run build
