{"version":3,"file":"cross-sdk.js","sources":["../../appkit/dist/esm/exports/index.js","../../wallet-button/dist/esm/src/client.js","../../wallet-button/dist/esm/exports/index.js","../../sdk/dist/esm/index.js","../lib/cross-sdk.ts"],"sourcesContent":["import { CoreHelperUtil } from '@to-nexus/appkit-core';\nimport { AppKit } from '../src/client.js';\nimport { PACKAGE_VERSION } from './constants.js';\n// -- Views ------------------------------------------------------------\nexport * from '@to-nexus/appkit-scaffold-ui';\n// -- Utils & Other -----------------------------------------------------\nexport * from '../src/utils/index.js';\nexport { CoreHelperUtil, AccountController, SendController, ConnectionController } from '@to-nexus/appkit-core';\nexport function createAppKit(options) {\n    return new AppKit({\n        ...options,\n        sdkVersion: CoreHelperUtil.generateSdkVersion(options.adapters ?? [], 'html', PACKAGE_VERSION)\n    });\n}\nexport { AppKit };\n//# sourceMappingURL=index.js.map","import { ConnectionController, ConnectorController, OptionsController } from '@to-nexus/appkit-core';\nimport { ApiController } from './controllers/ApiController.js';\nimport { WalletButtonController } from './controllers/WalletButtonController.js';\nimport { ConnectorUtil } from './utils/ConnectorUtil.js';\nimport { ConstantsUtil } from './utils/ConstantsUtil.js';\nimport { WalletUtil } from './utils/WalletUtil.js';\nexport class AppKitWalletButton {\n    constructor() {\n    }\n    isReady() {\n        return WalletButtonController.state.ready;\n    }\n    subscribeIsReady(callback) {\n        ApiController.subscribeKey('walletButtons', val => {\n            if (val.length) {\n                callback({ isReady: true });\n            }\n            else {\n                callback({ isReady: false });\n            }\n        });\n    }\n    async disconnect() {\n        WalletButtonController.setPending(true);\n        WalletButtonController.setError(undefined);\n        await ConnectionController.disconnect();\n        WalletButtonController.setPending(false);\n    }\n    async connect(wallet) {\n        try {\n            WalletButtonController.setPending(true);\n            WalletButtonController.setError(undefined);\n            if (ConstantsUtil.Socials.some(social => social === wallet)) {\n                const result = await ConnectorUtil.connectSocial(wallet);\n                this.handleSuccess(result);\n                return result;\n            }\n            const walletButton = WalletUtil.getWalletButton(wallet);\n            const connector = walletButton\n                ? ConnectorController.getConnector(walletButton.id, walletButton.rdns)\n                : undefined;\n            if (connector) {\n                const result = await ConnectorUtil.connectExternal(connector);\n                this.handleSuccess(result);\n                return result;\n            }\n            const { customWallets } = OptionsController.state;\n            const customWallet = customWallets?.find(w => w.id === wallet);\n            const currentConnectors = ConnectorController.state.connectors;\n            const result = await ConnectorUtil.connectWalletConnect({\n                walletConnect: wallet === 'cross_wallet',\n                connector: currentConnectors.find((c) => c.id === wallet),\n                wallet: customWallet\n            });\n            this.handleSuccess(result);\n            return result;\n        }\n        catch (err) {\n            this.handleError(err);\n            throw err;\n        }\n        finally {\n            WalletButtonController.setPending(false);\n        }\n    }\n    handleSuccess(result) {\n        console.log('Connection successful:', result);\n    }\n    handleError(err) {\n        console.error('Connection failed:', err);\n        WalletButtonController.setError(err);\n    }\n}\n//# sourceMappingURL=client.js.map","import { AppKitWalletButton } from '../src/client.js';\nexport * from '../src/scaffold-ui/appkit-wallet-button/index.js';\nexport { ConnectorUtil } from '../src/utils/ConnectorUtil.js';\nlet walletButton = undefined;\nexport function createAppKitWalletButton() {\n    if (!walletButton) {\n        walletButton = new AppKitWalletButton();\n    }\n    return walletButton;\n}\n//# sourceMappingURL=index.js.map","import { createAppKit as l } from \"@to-nexus/appkit\";\nimport { EthersAdapter as n } from \"@to-nexus/appkit-adapter-ethers\";\nimport { AccountController as _, ApiController as M, ConnectionController as b, ConstantsUtil as A, SendController as W } from \"@to-nexus/appkit-core\";\nimport { createAppKitWalletButton as i } from \"@to-nexus/appkit-wallet-button\";\nimport { ConnectorUtil as y } from \"@to-nexus/appkit-wallet-button\";\nimport { networkList as c } from \"@to-nexus/appkit/networks\";\nimport { bscMainnet as T, bscTestnet as U, crossMainnet as j, crossTestnet as B, etherMainnet as D, etherTestnet as E, kaiaMainnet as H, kaiaTestnet as I } from \"@to-nexus/appkit/networks\";\nimport { default as O } from \"@to-nexus/universal-provider\";\nconst p = new n(), m = {\n  name: \"Cross SDK\",\n  description: \"Cross SDK for HTML\",\n  url: \"https://to.nexus\",\n  icons: [\"https://contents.crosstoken.io/img/sample_app_circle_icon.png\"]\n}, w = (e) => {\n  const { projectId: t, redirectUrl: s, metadata: o, themeMode: r, defaultNetwork: a } = e;\n  return d(t, s, o, r, a);\n}, d = (e, t, s, o, r) => {\n  const a = {\n    ...m,\n    ...s,\n    redirect: {\n      universal: t\n    }\n  };\n  return l({\n    adapters: [p],\n    networks: c,\n    defaultNetwork: r,\n    metadata: a,\n    projectId: e,\n    themeMode: o || \"light\",\n    features: {\n      swaps: !1,\n      onramp: !1,\n      receive: !1,\n      send: !1,\n      email: !1,\n      emailShowWallets: !1,\n      socials: !1,\n      history: !1,\n      analytics: !1,\n      legalCheckbox: !1\n    },\n    enableCoinbase: !1,\n    customWallets: [\n      {\n        id: \"cross_wallet\",\n        name: \"CROSS Wallet\",\n        image_url: \"https://contents.crosstoken.io/wallet/token/images/CROSSx.svg\",\n        mobile_link: \"crossx://\",\n        app_store: \"https://apps.apple.com/us/app/crossx-games/id6741250674\",\n        play_store: \"https://play.google.com/store/apps/details?id=com.nexus.crosswallet\",\n        chrome_store: \"https://chromewebstore.google.com/detail/cross-wallet/your-extension-id\",\n        rdns: \"nexus.to.crosswallet.desktop\",\n        injected: [\n          {\n            injected_id: \"nexus.to.crosswallet.desktop\"\n          }\n        ]\n      }\n    ],\n    allWallets: \"HIDE\"\n  });\n}, C = () => i(), x = \"1.17.1-beta.3\";\nexport {\n  _ as AccountController,\n  M as ApiController,\n  b as ConnectionController,\n  y as ConnectorUtil,\n  A as ConstantsUtil,\n  W as SendController,\n  O as UniversalProvider,\n  T as bscMainnet,\n  U as bscTestnet,\n  j as crossMainnet,\n  B as crossTestnet,\n  D as etherMainnet,\n  E as etherTestnet,\n  d as initCrossSdk,\n  w as initCrossSdkWithParams,\n  H as kaiaMainnet,\n  I as kaiaTestnet,\n  x as sdkVersion,\n  C as useAppKitWallet\n};\n","/**\n * Cross SDK CDN Entry Point\n * Exports all Cross SDK functionality for browser usage\n */\nimport {\n  AccountController,\n  ConnectionController,\n  ConnectorUtil,\n  ConstantsUtil,\n  type CrossSdkParams,\n  type Metadata,\n  SendController,\n  UniversalProvider,\n  bscMainnet,\n  bscTestnet,\n  crossMainnet,\n  crossTestnet,\n  etherMainnet,\n  etherTestnet,\n  initCrossSdk,\n  initCrossSdkWithParams,\n  kaiaMainnet,\n  kaiaTestnet,\n  useAppKitWallet\n} from '@to-nexus/sdk'\n\n// Export all SDK functionality\nexport {\n  initCrossSdk,\n  initCrossSdkWithParams,\n  useAppKitWallet,\n  ConnectionController,\n  ConnectorUtil,\n  SendController,\n  AccountController,\n  crossMainnet,\n  crossTestnet,\n  bscMainnet,\n  bscTestnet,\n  kaiaMainnet,\n  kaiaTestnet,\n  etherMainnet,\n  etherTestnet,\n  UniversalProvider,\n  ConstantsUtil\n}\n\n// Export types\nexport type { CrossSdkParams, Metadata }\n\ndeclare global {\n  interface Window {\n    CrossSdk: {\n      initCrossSdk: typeof initCrossSdk\n      initCrossSdkWithParams: typeof initCrossSdkWithParams\n      useAppKitWallet: typeof useAppKitWallet\n      ConnectionController: typeof ConnectionController\n      ConnectorUtil: typeof ConnectorUtil\n      SendController: typeof SendController\n      AccountController: typeof AccountController\n      crossMainnet: typeof crossMainnet\n      crossTestnet: typeof crossTestnet\n      bscMainnet: typeof bscMainnet\n      bscTestnet: typeof bscTestnet\n      kaiaMainnet: typeof kaiaMainnet\n      kaiaTestnet: typeof kaiaTestnet\n      etherMainnet: typeof etherMainnet\n      etherTestnet: typeof etherTestnet\n      UniversalProvider: typeof UniversalProvider\n      ConstantsUtil: typeof ConstantsUtil\n    }\n  }\n}\n\n// Assign to window.CrossSdk for global access\nif (typeof window !== 'undefined') {\n  window.CrossSdk = {\n    initCrossSdk,\n    initCrossSdkWithParams,\n    useAppKitWallet,\n    ConnectionController,\n    ConnectorUtil,\n    SendController,\n    AccountController,\n    crossMainnet,\n    crossTestnet,\n    bscMainnet,\n    bscTestnet,\n    kaiaMainnet,\n    kaiaTestnet,\n    etherMainnet,\n    etherTestnet,\n    UniversalProvider,\n    ConstantsUtil\n  }\n}\n"],"names":["result","walletButton","w","n","l","c","i","initCrossSdk","initCrossSdkWithParams","useAppKitWallet","UniversalProvider","ConstantsUtil"],"mappings":"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"}